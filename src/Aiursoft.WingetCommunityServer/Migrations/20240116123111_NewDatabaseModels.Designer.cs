// <auto-generated />
using System;
using Aiursoft.WingetCommunityServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aiursoft.WingetCommunityServer.Migrations
{
    [DbContext(typeof(WingetServerDbContext))]
    [Migration("20240116123111_NewDatabaseModels")]
    partial class NewDatabaseModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.15");

            modelBuilder.Entity("WingetCommunityServer.Models.Database.Package", b =>
                {
                    b.Property<int>("DatabaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabaseId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersion", b =>
                {
                    b.Property<int>("DatabaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileExtensions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallModes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerSuccessCodes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerSwitches")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Protocols")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradeBehavior")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabaseId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageVersions");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersionInstaller", b =>
                {
                    b.Property<int>("DatabaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerSha256")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabaseId");

                    b.HasIndex("PackageVersionId");

                    b.ToTable("PackageVersionInstallers");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersionLocale", b =>
                {
                    b.Property<int>("DatabaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopyRight")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopyRightUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documentations")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallationNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("License")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Moniker")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageLocale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrivacyUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherSupportUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseNotesUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.HasKey("DatabaseId");

                    b.HasIndex("PackageVersionId");

                    b.ToTable("PackageVersionLocales");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersion", b =>
                {
                    b.HasOne("WingetCommunityServer.Models.Database.Package", "Package")
                        .WithMany("Versions")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersionInstaller", b =>
                {
                    b.HasOne("WingetCommunityServer.Models.Database.PackageVersion", "PackageVersion")
                        .WithMany("Installers")
                        .HasForeignKey("PackageVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageVersion");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersionLocale", b =>
                {
                    b.HasOne("WingetCommunityServer.Models.Database.PackageVersion", "PackageVersion")
                        .WithMany("Locales")
                        .HasForeignKey("PackageVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackageVersion");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.Package", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("WingetCommunityServer.Models.Database.PackageVersion", b =>
                {
                    b.Navigation("Installers");

                    b.Navigation("Locales");
                });
#pragma warning restore 612, 618
        }
    }
}
